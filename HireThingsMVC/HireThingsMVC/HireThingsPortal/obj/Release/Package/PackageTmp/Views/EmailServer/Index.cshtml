@model ASOL.HireThings.Model.EmailServerModel
@{
    ViewBag.Title = "Email Servers";
}

@using (Ajax.BeginForm("Index", "EmailServer", new AjaxOptions { }, new { @id = "EmailServerForm", @autocomplete="off" }))
{
    @Html.HiddenFor(m => m.ServerId, new { @id = "hdnEmailServerId" })
    <div class="row">
        <div class="col-lg-12">
            <div class="panel">
                <header class="panel-heading oflo-h mb-lg">
                    <h2 class="pull-left panel-title text-dark-gray text-semibold text-uppercase pt-sm">@ViewData["FormTitle"]</h2>
                    <div class="pull-right"><a href="~/EmailServerSearch/Index"  role="button" class="btn btn-primary pull-right btn-sm" >Back</a></div>
                </header>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-sm-12">
                                @Html.LabelFor(m => m.ServerId, "Email Server ID:", new { @class = "col-lg-3 control-label" })
                                <div class="col-lg-7">
                                    @Html.TextBoxFor(m => m.ServerId, new { @class = "form-control CustomReadOnly", @readonly = true })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                @Html.LabelFor(m => m.ServerName, "Server Name:", new { @class = "col-lg-3 control-label" })
                                <div class="col-lg-7">
                                    @Html.TextBoxFor(m => m.ServerName, new { @class = "form-control", @maxlength = "100" })
                                    @Html.ValidationMessageFor(m => m.ServerName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                @Html.LabelFor(m => m.ServerIP, "SMTP Server:", new { @class = "col-lg-3 control-label" })
                                <div class="col-lg-7">
                                    @Html.TextBoxFor(m => m.ServerIP, new { @class = "form-control", @maxlength = "100" })
                                    @Html.ValidationMessageFor(m => m.ServerIP, "", new { @class = "text-danger" })                                
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                @Html.LabelFor(m => m.UserName, "User Name:", new { @class = "col-lg-3 control-label" })
                                <div class="col-lg-7">
                                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @maxlength = "50", @autocomplete = "off" })
                                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })                                                                                                   
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                @Html.LabelFor(m => m.UserPswd, "Password:", new { @class = "col-lg-3 control-label" })
                                <div class="col-lg-7">
                                    @if (Model.UserPswd != null)
                                    { 
                                        @Html.PasswordFor(m => m.UserPswd, new { @class = "form-control", @maxlength = "50", value = Model.UserPswd, @autocomplete = "off" })
                                    }
                                    else
                                    { 
                                    @Html.PasswordFor(m => m.UserPswd, new { @class = "form-control", @maxlength = "50", @autocomplete = "off" })
                                    }
                                    @Html.ValidationMessageFor(m => m.UserPswd, "", new { @class = "text-danger" })
                                 </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                @Html.LabelFor(m => m.EmailPort, "Email Port:", new { @class = "col-lg-3 control-label" })
                                <div class="col-lg-7">
                                    @Html.TextBoxFor(m => m.EmailPort, new { @class = "form-control hasKeyLocking", @data_keylocking = "numeric",  @maxlength = "6" })
                                    @Html.ValidationMessageFor(m => m.EmailPort, "", new { @class = "text-danger" })
                                    
                               </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                @Html.LabelFor(m => m.Priority, "Priority:", new { @class = "col-lg-3 control-label" })
                                <div class="col-lg-7">                       
                                    @Html.TextBoxFor(m => m.Priority, new { @class = "form-control hasKeyLocking", @data_keylocking = "numeric",  @maxlength = "3" })
                                    @Html.ValidationMessageFor(m => m.Priority, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                @Html.LabelFor(m => m.EnableSSL, "Enable SSL:", new { @class = "col-lg-3 control-label" })
                                <div class="col-lg-7 va-bottom ib">
                                    @Html.CheckBoxFor(m => m.EnableSSL, new { @class = "mt-sm", })
                                   
                               </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                @Html.LabelFor(m => m.UseDefaultCredentials, "Use Default Credentials:", new { @class = "col-lg-3 control-label" })

                                <div class="col-lg-7 va-bottom ib">@Html.CheckBoxFor(m => m.UseDefaultCredentials, new { @class = "mt-sm", })</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                @Html.LabelFor(m => m.IsActive, "Is Active:", new { @class = "col-lg-3 control-label" })
                                <div class="col-lg-7 va-bottom ib">@Html.CheckBoxFor(m => m.IsActive, new { @class = "mt-sm", })</div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>

        <!-- Buttom Buttons -->
        <div class="col-lg-12">
            <p class="pull-right">
                <a  class="btn btn-primary btn-sm" href="~/EmailServerSearch/Index" role="button">Cancel</a>
                &nbsp;
                <button  class="btn btn-primary btn-sm" type="submit" role="button">&nbsp;Save&nbsp;</button>
            </p>
        </div>
    </div>

    <script>
        $(document).ready(function () {
            HIRETHINGS.Global.KeyLocking('.hasKeyLocking', 'data-keylocking');
            HIRETHINGS.Global.ApplyMenuSelection('EmailServer');
            $('form[autocomplete="off"] input, input[autocomplete="off"]').each(function () {
                var input = this;
                var name = $(input).attr('name');
                var id = $(input).attr('id');
                $(input).removeAttr('name');
                $(input).removeAttr('id');
                setTimeout(function () {
                    $(input).attr('name', name);
                    $(input).attr('id', id);
                }, 1);
            });
        });
    </script>
}

