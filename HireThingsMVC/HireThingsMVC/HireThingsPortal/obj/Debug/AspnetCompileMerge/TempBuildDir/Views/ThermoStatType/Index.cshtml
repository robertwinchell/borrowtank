@model MEPS.MEPSTemp.Model.ThermoStateTypeModel

@using (Ajax.BeginForm("Index", "ThermoStatType", new AjaxOptions { }))
{
    <div class="row">
        <div class="col-lg-12">
            <div class="panel">
                <header class="panel-heading oflo-h mb-lg">
                    <h2 class="pull-left panel-title text-dark-gray text-semibold text-uppercase pt-sm">@ViewData["FormTitle"]</h2>
                    <div class="pull-right"><input type="button" value="Back" class="btn btn-primary pull-right btn-sm" onclick="location.href='@Url.Action("Index", "ThermostatTypeSearch")'"></div>
                </header>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <div class="form-group">
                            <div class="col-sm-12">
                                <label class="col-lg-3 control-label">Thermostate Type ID:</label>
                                <div class="col-lg-7">@Html.TextBoxFor(m => m.ThermostatTypeId, new { @class = "form-control CustomReadOnly", @readonly = true })</div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                <label class="col-lg-3 control-label">Name:</label>
                                <div class="col-lg-7">
                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @maxlength = "50" })
                                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                <label class="col-lg-3 control-label">Code:</label>
                                <div class="col-lg-7">
                                   @Html.TextBoxFor(m => m.Code, new { @class = "form-control hasKeyLocking", @maxlength = "3", @data_keylocking = "alphanumeric" })
                                   @Html.ValidationMessageFor(m => m.Code, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                <label class="col-lg-3 control-label">Description:</label>
                                <div class="col-lg-7">
                                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control",  @maxlength = "500" })
                                    @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                <label class="col-lg-3 ib control-label">Is Active:</label>
                                <div class="col-lg-7 va-bottom ib">@Html.CheckBoxFor(m => m.IsActive, new { @class = "mt-sm" })</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Buttom Buttons -->
        <div class="col-lg-12">
            <p class="pull-right">
                <a role="button" class="btn btn-primary btn-sm" href="~/ThermostatTypeSearch/Index">Cancel</a>
                &nbsp;
                <button role="button" class="btn btn-primary btn-sm" href="#">&nbsp;Save&nbsp;</button>
</p>
        </div>
    </div>
    <script>
    $(document).ready(function () {
        MEPSTEMP.Global.KeyLocking('.hasKeyLocking', 'data-keylocking');
        MEPSTEMP.Global.ApplyMenuSelection('ThermostatType');
    });
    </script>
}
